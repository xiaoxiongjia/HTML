样式的建立:内部样式外部样式和内联样式
外部样式2种方式
a:外部样式表的创建
b:外部样式表的导入
方法一:
语法: <link rel="stylesheet" type=" text/css" href="目标文件的路径及文件名全称" />
说明:使用link元素导入外部样式表时,需将该元素写在文档头部，即<head>与</head>之间。
rel:用于定义文档关联，表示关联样式表;
type :定义文档类型; 
方法二:
语法:
<style type="text/css">
@import ur("目标文件的路径及文件名全称"); 
</style> 
说明: @和import之间没有空格uri和小括号之间也没有空格;括号内部加引号,必须结尾以分号结束;
扩展知识：
差别1 :老祖宗的差别: link属于xHTML标签,而@import完全是CSS提供的一种方式。link标签除了 可
以加载Css外，还可以做很多其它的事情,比如定义RSS，定义rel连接属性等，@import就只能助载CsS。
差别2 :加载顺序的差别:当-个页面被加载的时候(就是被浏览者浏览的时候) , link引用的CSS会
同时被加载，而@import引用的CSS会等到页面全部被下载完再被加载。所以有时候浏览@import加载
CSS的页面时开始会没有样式。
差别3 :兼容性的差别，: @import是CSS2.1提出的，所以老的浏览器不支持，@import只在IES以上的
才能识别,而link标签无此问题。
差别4 :使用dom控制样式时的差别:当使用javascript控制dom去改变样式的时候,只能使用link标签,
因为@import不是dom可以控制的.
内联样式：
语法：<标签 style="属性：属性值;"><标签>
例子：<div style="width:100px;"></div> 
样式表优先级：最高内联样式、内部样式外部样式（谁在前面就优先）


div {
				width: 400px;
				height: 400px;
				background: darkviolet;
			}
			p{
				color: aqua;
			}
			#p1{
				color: #F00;
				font-size: 40px;
			}
			.p4{
				color: yellow;
				font-size: 30px;
			}
			.p2,#p3,i{
				font-size: 50px;
			}
			ul li{
				background: #C3C; font-size: 30px;
			}
			
CSS选择器：
常用的选择器有十种左右，
   选择器                          语法													说明
类型选择器     	元素名称{属性：属性值;} 									可以叫标签选择器
id选择符、		# id名{属性：属性值;}									取名不能使用关键字
class选择符、	. class名{属性:属性值；}             					每个元素定义一个类名称
群组选择符、		.选择符1，#选择符2，选择符3......{属性:属性值;}			如有多个选择符用","分割的方式，合并为一组。
包含选择符、		选择符1(父) 选择符2(子){属性:属性值;}						选择符中间用空格隔开，选择符1中包含选择符2.
通配符			*{属性:属性值;}											通配符的写法是"*”;常用来重置样式
伪类选择符:
a:link {color:red;} /* 未访问的链接状态"/
a:visited.{color: green;} /* 已访问的链接状态*/
a:hover {color: blue;} /* 鼠标滑过链接状态。/ 
a:active {color: yellow;} /*鼠标按下去时的状态*/
说明:当这4个超链接伪类选择符联合使用时,应注意他们的顺序，正常顺序为: a，a:linka:visited,a:hover,a:active,错误的顺序有时会使超链接的样式失效;
为了简化代码,可以把伪类选择符中相同的声明提出来放在a选择符中;例如: a{color:red;}a:hover{colorgreen;}表示超链接的三种状态都相同，只有鼠标划过变化颜色。
伪对象选择符:
选择符的权重：css中用四位数字表示权重I权重的表达方式如:0，0,0,
类型选择符的权重为0001 a p div span form .... 1 
class选择符的权重为0010.cdass 10 )
id选择符的权重为0100 #100
子选择符的权重为0000
属性选择符的权重为0010
伪类选择符的权重为0010
伪元素选择符的权重为0010
包含选择符的权重:为包含选择符的权重之和
内联样式的权重为1000
继承样式的权重为0000
注:如果权重相同时,则执行后的样式;

css注释

CSS样式：背景、文本、字体、连接、列表、表格、轮敦
1.背景
颜色：background-color：值；
图片：background-image：值；
重复背景：background-repeat：值；repeat-x 和 repeat-y 分别导致图像只在水平或垂直方向上重复，no-repeat 则不允许图像在任何方向上平铺。
背景定位：background-position：值；值可以填写关键字：top、bottom等、长度值：100px、百分数值50%。
背景关联：background-attachment：值；默认值：scroll
2、文本
缩进文本：text-indent：值；
水平对齐：text-align：值；默认值：left
字间隔：word-spacing：值；默认值：normal
字母间隔：letter-spacing：值；默认值：normal
字符转换：text-transform：值；这个属性有四个值：none、uppercase、lowercase、capitalize
默认值：none；none对文本不做任何改动，uppercase、lowercase将文本转换为全大写和全小写
capitalize每个单词的首字母大写
文本装饰：text-decoration：值；这个属性有五个值：none、underline、overline、line-through、blink
underline 会对元素加下划线overline 的作用恰好相反，会在文本的顶端画一个上划线。值 line-through 则在文本中间画一个贯穿线
blink 会让文本闪烁
处理空白符：white-space：值；
文本方向：direction 属性影响块级元素中文本的书写方向、表中列布局的方向、内容水平填充其元素框的方向、以及两端对齐元素中最后一行的位置。
注释：对于行内元素，只有当 unicode-bidi 属性设置为 embed 或 bidi-override 时才会应用 direction 属性。
direction 属性有两个值：ltr 和 rtl。大多数情况下，默认值是 ltr，显示从左到右的文本。如果显示从右到左的文本，应使用值 rtl。
3.字体
注：目前没有任何一种办法确保在Web上一致地使用字体，因为没有一种统一描述字体和字体的变形的方法。
在CCS中有两种不同类型的字体系列名称：
通用字体系列:拥有相似外观的字体系统组合（Serif或Monospace）
特定字体系列：具体的字体系列（Times或Courier）
除了特定字体外还有5种通用字体系列：
Serif字体：这些字体成比例，而且有上下短线。
Sans-serif字体:这些字体是成比例的，而且没有上下短线。
Monospace字体：Monospace 字体并不是成比例的。
Cursive字体：这些字体试图模仿人的手写体。
Fantasy字体这些字体无法用任何特征来定义，只有一点是确定的，那就是我们无法很容易地将其规划到任何一种其他的字体系列当中
如需值定字体h1{font-family：值}
字体风格：p{font-style：值}normal文本正常显示、italic文本斜体显示、oblique文本倾斜显示
字体变形：p{font-variant:small-caps;}把小写变大写字母
字体加粗：p{font-weight:值；}一共分1~9级加粗   normal为4级  bold为7级
字体大小：p{font-size:值；} 字体的大小用em设置， 1em=16px
4.链接
链接的状态：
a:link普通的、未被访问的链
a:visited用户已访问的链接
a:hover鼠标指针位于链接的上方
a:active链接被点击的时刻
当为链接的不同状态设置样式时，请按照以下次序规则：
a:hover 必须位于 a:link 和 a:visited 之后
a:active 必须位于 a:hover 之后
text-decoration这个属性是用来去掉下划线的
background-color这个是用来写链接的背景颜色的
5.列表
CSS 列表属性允许你放置、改变列表项标志，或者将图像作为列表项标志。
list-style-type：用来修改列表项的标志
list-style-type:使用图片作标志	
确定标志出现在列表项内容之外还是内容内部。这是利用 list-style-position 完成的。
6.表格
边框：使用border属性
折叠边框：border-collapse 属性设置是否将表格边框折叠为单一边框
表格宽度和高度:通过 width 和 height 属性定义表格的宽度和高度。
表格文本对齐:text-align 和 vertical-align 属性设置表格中文本的对齐方式。
text-align 属性设置水平对齐方式，比如左对齐、右对齐或者居中：
vertical-align 属性设置垂直对齐方式，比如顶部对齐、底部对齐或居中对齐：
表格内边距：如需控制表格中内容与边框的距离，请为 td 和 th 元素设置 padding 属性
7.轮廓
轮廓（outline）是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用。
CSS outline 属性规定元素轮廓的样式、颜色和宽度。

CSS框模型
1.CSS框模型概述
CSS框模型规定了元素框处理元素内容、内边距、边框、外边距的方式

CSS定位：
1.概念：CSS 为定位和浮动提供了一些属性，利用这些属性，可以建立列式布局，将布局的一部分与另一部分重叠，还可以完成多年来通常需要使用多个表格才能完成的任务。
2.有一个说法叫：一切皆为框
3.定位机制：普通流、浮动和绝对定位。除非专门指定，否则所有框都在普通流中定位。
4.position属性值的含义：
static元素框正常生成。
relative元素框偏移某个距离。
absolute元素框从文档流完全删除，并相对于其包含块定位。
fixed元素框的表现类似于将 position 设置为 absolute，不过其包含块是视窗本身。
提示：相对定位实际上被看作普通流定位模型的一部分，因为元素的位置相对于它在普通流中的位置。
5.相对定位：
6.绝对定位：
提示：因为绝对定位的框与文档流无关，所以它们可以覆盖页面上的其它元素。可以通过设置 z-index 属性来控制这些框的堆放次序。
7.浮动：在CSS中我们提供float属性实现元素的浮动
clear:both;图像的左侧和右侧均不允许出现浮动元素：